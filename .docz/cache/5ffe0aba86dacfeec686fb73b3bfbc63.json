{"remainingRequest":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/react\",[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"root\":[\"./src\"]}],[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/docz-core/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx","dependencies":[{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx","mtime":1549052216147},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/cache-loader/dist/cjs.js","mtime":1547306037965},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js","mtime":1547246468683}],"contextDependencies":[],"result":["var _jsxFileName = \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isNil, omit } from 'ramda';\nimport FormContextManager from \"../managers/form-context-manager\";\nimport FormContext from \"../contexts/form-context\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.formManager = new FormContextManager(props.initialValue);\n    _this.onFieldChange = _this.onFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFieldMount = _this.onFieldMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlerOnValidate = _this.handlerOnValidate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlerSubmit = _this.handlerSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      initialValue: props.initialValue,\n      fields: {},\n      errorsInForm: []\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"onFieldChange\",\n    value: function onFieldChange(fieldData) {\n      var _this2 = this;\n\n      this.setState({\n        fields: this.formManager.onFieldChange(fieldData)\n      }, function () {\n        return _this2.handlerOnValidate();\n      });\n    }\n  }, {\n    key: \"onFieldMount\",\n    value: function onFieldMount(fieldData) {\n      this.setState({\n        fields: this.formManager.onFieldMount(fieldData)\n      });\n    }\n  }, {\n    key: \"handlerOnValidate\",\n    value: function handlerOnValidate() {\n      var _this3 = this;\n\n      var onValidate = this.props.onValidate;\n      var result = onValidate(this.formManager.getValues());\n      var newFieldvalue = this.formManager.onValidationForm(result);\n      var newErrorsInForm = this.formManager.globalErrorsInForm;\n      return new Promise(function (resolve) {\n        _this3.setState({\n          fields: newFieldvalue,\n          errorsInForm: newErrorsInForm\n        }, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"handlerSubmit\",\n    value: function handlerSubmit(evt) {\n      var _this4 = this;\n\n      var onSubmit = this.props.onSubmit;\n\n      if (!isNil(evt)) {\n        evt.preventDefault();\n      }\n\n      this.handlerOnValidate().then(function () {\n        var value = _this4.formManager.onSubmitForm();\n\n        if (!isNil(value)) {\n          onSubmit(value);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var children = this.props.children;\n      var _this$state = this.state,\n          initialValue = _this$state.initialValue,\n          errorsInForm = _this$state.errorsInForm,\n          fields = _this$state.fields;\n      var safeProps = omit(['initialValue', 'onValidate', 'onSubmit'], this.props);\n      return React.createElement(FormContext.Provider, {\n        value: {\n          initialValue: initialValue,\n          globalErrors: errorsInForm,\n          fields: fields,\n          onFieldChange: this.onFieldChange,\n          onFieldMount: this.onFieldMount,\n          onSubmit: this.handlerSubmit\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", Object.assign({\n        onSubmit: function onSubmit(evt) {\n          return _this5.handlerSubmit(evt);\n        }\n      }, safeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), children));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Form;\n}(Component);\n\n_defineProperty(Form, \"propTypes\", {\n  /**\n   * define el valor inicial del formulario, en caso de tener conflicto con el\n   * valor inicial de un input en concreto, tiene preferencia este valor.\n   */\n  initialValue: PropTypes.shape({}),\n\n  /**\n   * funcion que se ejecuta al enviar el formulario,\n   * recibe como parametro un objecto con el valor del formulario.\n   */\n  onSubmit: PropTypes.func.isRequired,\n\n  /**\n   * son los hijos del componente Form\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * funcion que se ejecuta en cada cambio de valor del formulario.\n   * recibe como parametro el nuevo valor, en caso de error se debe\n   * retornar un objeto error.\n   *\n   */\n  onValidate: PropTypes.func\n});\n\n_defineProperty(Form, \"defaultProps\", {\n  initialValue: {},\n  onValidate: function onValidate() {\n    return null;\n  }\n});\n\nvar _default = Form;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Form, \"Form\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx\");\n  leaveModule(module);\n})();\n\n;\nForm.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onFieldChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"fieldData\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onFieldMount\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"fieldData\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handlerOnValidate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handlerSubmit\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"evt\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Form\",\n  \"props\": {\n    \"initialValue\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {}\n      },\n      \"required\": false,\n      \"description\": \"define el valor inicial del formulario, en caso de tener conflicto con el\\nvalor inicial de un input en concreto, tiene preferencia este valor.\"\n    },\n    \"onValidate\": {\n      \"defaultValue\": {\n        \"value\": \"() => null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"funcion que se ejecuta en cada cambio de valor del formulario.\\nrecibe como parametro el nuevo valor, en caso de error se debe\\nretornar un objeto error.\"\n    },\n    \"onSubmit\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"funcion que se ejecuta al enviar el formulario,\\nrecibe como parametro un objecto con el valor del formulario.\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"son los hijos del componente Form\"\n    }\n  }\n};",{"version":3,"sources":["/home/kan/desarrollo/proyectos/components/touka-forms/src/components/form.jsx"],"names":["React","Component","PropTypes","isNil","omit","FormContextManager","FormContext","Form","props","formManager","initialValue","onFieldChange","bind","onFieldMount","handlerOnValidate","handlerSubmit","state","fields","errorsInForm","fieldData","setState","onValidate","result","getValues","newFieldvalue","onValidationForm","newErrorsInForm","globalErrorsInForm","Promise","resolve","evt","onSubmit","preventDefault","then","value","onSubmitForm","children","safeProps","globalErrors","shape","func","isRequired","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { isNil, omit } from 'ramda'\nimport FormContextManager from 'managers/form-context-manager'\nimport FormContext from 'contexts/form-context'\n\n\nclass Form extends Component {\n  static propTypes = {\n    /**\n     * define el valor inicial del formulario, en caso de tener conflicto con el\n     * valor inicial de un input en concreto, tiene preferencia este valor.\n     */\n    initialValue: PropTypes.shape({}),\n\n    /**\n     * funcion que se ejecuta al enviar el formulario,\n     * recibe como parametro un objecto con el valor del formulario.\n     */\n    onSubmit: PropTypes.func.isRequired,\n\n    /**\n     * son los hijos del componente Form\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * funcion que se ejecuta en cada cambio de valor del formulario.\n     * recibe como parametro el nuevo valor, en caso de error se debe\n     * retornar un objeto error.\n     *\n     */\n    onValidate: PropTypes.func,\n\n  }\n\n  static defaultProps = {\n    initialValue: {},\n    onValidate: () => null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.formManager = new FormContextManager(props.initialValue)\n    this.onFieldChange = this.onFieldChange.bind(this)\n    this.onFieldMount = this.onFieldMount.bind(this)\n    this.handlerOnValidate = this.handlerOnValidate.bind(this)\n    this.handlerSubmit = this.handlerSubmit.bind(this)\n    this.state = {\n      initialValue: props.initialValue,\n      fields: {},\n      errorsInForm: [],\n    }\n  }\n\n  onFieldChange(fieldData) {\n    this.setState({\n      fields: this.formManager.onFieldChange(fieldData),\n    }, () => this.handlerOnValidate())\n  }\n\n  onFieldMount(fieldData) {\n    this.setState({ fields: this.formManager.onFieldMount(fieldData) })\n  }\n\n  handlerOnValidate() {\n    const { onValidate } = this.props\n    const result = onValidate(this.formManager.getValues())\n    const newFieldvalue = this.formManager.onValidationForm(result)\n    const newErrorsInForm = this.formManager.globalErrorsInForm\n    return new Promise((resolve) => {\n      this.setState({\n        fields: newFieldvalue,\n        errorsInForm: newErrorsInForm,\n      }, () => resolve())\n    })\n  }\n\n  handlerSubmit(evt) {\n    const { onSubmit } = this.props\n    if (!isNil(evt)) {\n      evt.preventDefault()\n    }\n    this.handlerOnValidate().then(() => {\n      const value = this.formManager.onSubmitForm()\n      if (!isNil(value)) {\n        onSubmit(value)\n      }\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    const {\n      initialValue, errorsInForm, fields,\n    } = this.state\n    const safeProps = omit(['initialValue', 'onValidate', 'onSubmit'], this.props)\n    return (\n      <FormContext.Provider\n        value={{\n          initialValue,\n          globalErrors: errorsInForm,\n          fields,\n          onFieldChange: this.onFieldChange,\n          onFieldMount: this.onFieldMount,\n          onSubmit: this.handlerSubmit,\n        }}\n      >\n        <form\n          onSubmit={evt => this.handlerSubmit(evt)}\n          {...safeProps}\n        >\n          {children}\n        </form>\n      </FormContext.Provider>\n    )\n  }\n}\n\nexport default Form\n"]}]}