{"remainingRequest":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/react\",[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"root\":[\"./src\"]}],[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/docz-core/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/home/kan/desarrollo/proyectos/components/touka-forms/src/functions/form-functions.js","dependencies":[{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/src/functions/form-functions.js","mtime":1549051083883},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/cache-loader/dist/cjs.js","mtime":1547306037965},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js","mtime":1547246468683}],"contextDependencies":[],"result":["import{find,findIndex,append,update,has,mergeRight,none,reduce,objOf,map,isNil,concat,is}from'ramda';export var selectField=function selectField(fieldName,fields){return find(function(obj){return obj.name===fieldName;},fields);};export var getIndexOfFieldData=function getIndexOfFieldData(fieldData,fields){return findIndex(function(obj){return obj.name===fieldData.name;},fields);};export var insertFieldDataInFields=function insertFieldDataInFields(fieldData,fields){var indexField=getIndexOfFieldData(fieldData,fields);if(indexField<0){return append(fieldData,fields);}return update(indexField,fieldData,fields);};export var insertInitialDataInFieldData=function insertInitialDataInFieldData(fieldData,initialValue){if(has(fieldData.name,initialValue)){return mergeRight(fieldData,{value:initialValue[fieldData.name]});}return fieldData;};export var isAllFieldsCorrect=function isAllFieldsCorrect(fields){return none(function(obj){return obj.error===true;},fields);};export var getValuesForSubmit=function getValuesForSubmit(fields){return reduce(function(acc,obj){return mergeRight(acc,objOf(obj.name)(obj.value));},{},fields);};export var updateFieldDataInFields=function updateFieldDataInFields(fieldData,fields){var indexField=getIndexOfFieldData(fieldData,fields);if(indexField<0){return fields;}return update(indexField,fieldData,fields);};export var resetFieldsToInitialValue=function resetFieldsToInitialValue(fields,initialValue){return map(function(fieldData){return insertInitialDataInFieldData(fieldData,initialValue);},fields);};export var insertErrorsInFieldData=function insertErrorsInFieldData(field,errors){var errorForThisField=find(function(error){return error.name===field.name;},errors);if(isNil(errorForThisField)){return field;}if(isNil(field.errors)||!is(Array,field.errors)){return mergeRight(field,{error:true,errors:errorForThisField.errors});}return mergeRight(field,{error:true,errors:concat(errorForThisField.errors,field.errors)});};export var handlerGlobalErrorsOfValidation=function handlerGlobalErrorsOfValidation(result){if(isNil(result.global)){return[];}return result.global;};export var handlerFieldsDataErrorsOfValidation=function handlerFieldsDataErrorsOfValidation(result,fields){if(isNil(result.fields)){return fields;}return map(function(obj){return insertErrorsInFieldData(obj,result.fields);},fields);};",{"version":3,"sources":["/home/kan/desarrollo/proyectos/components/touka-forms/src/functions/form-functions.js"],"names":["find","findIndex","append","update","has","mergeRight","none","reduce","objOf","map","isNil","concat","is","selectField","fieldName","fields","obj","name","getIndexOfFieldData","fieldData","insertFieldDataInFields","indexField","insertInitialDataInFieldData","initialValue","value","isAllFieldsCorrect","error","getValuesForSubmit","acc","updateFieldDataInFields","resetFieldsToInitialValue","insertErrorsInFieldData","field","errors","errorForThisField","Array","handlerGlobalErrorsOfValidation","result","global","handlerFieldsDataErrorsOfValidation"],"mappings":"AAAA,OACEA,IADF,CACQC,SADR,CACmBC,MADnB,CAC2BC,MAD3B,CACmCC,GADnC,CACwCC,UADxC,CACoDC,IADpD,CAC0DC,MAD1D,CACkEC,KADlE,CACyEC,GADzE,CAC8EC,KAD9E,CACqFC,MADrF,CAC6FC,EAD7F,KAEO,OAFP,CAKA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,CAAYC,MAAZ,QAAuBf,CAAAA,IAAI,CAAC,SAAAgB,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,GAAaH,SAAjB,EAAJ,CAAgCC,MAAhC,CAA3B,EAApB,CAEP,MAAO,IAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,SAAD,CAAYJ,MAAZ,QAAuBd,CAAAA,SAAS,CAAC,SAAAe,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,GAAaE,SAAS,CAACF,IAA3B,EAAJ,CAAqCF,MAArC,CAAhC,EAA5B,CAEP,MAAO,IAAMK,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACD,SAAD,CAAYJ,MAAZ,CAAuB,CAC5D,GAAMM,CAAAA,UAAU,CAAGH,mBAAmB,CAACC,SAAD,CAAYJ,MAAZ,CAAtC,CACA,GAAIM,UAAU,CAAG,CAAjB,CAAoB,CAClB,MAAOnB,CAAAA,MAAM,CAACiB,SAAD,CAAYJ,MAAZ,CAAb,CACD,CACD,MAAOZ,CAAAA,MAAM,CAACkB,UAAD,CAAaF,SAAb,CAAwBJ,MAAxB,CAAb,CACD,CANM,CAQP,MAAO,IAAMO,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACH,SAAD,CAAYI,YAAZ,CAA6B,CACvE,GAAInB,GAAG,CAACe,SAAS,CAACF,IAAX,CAAiBM,YAAjB,CAAP,CAAuC,CACrC,MAAOlB,CAAAA,UAAU,CAACc,SAAD,CAAY,CAAEK,KAAK,CAAED,YAAY,CAACJ,SAAS,CAACF,IAAX,CAArB,CAAZ,CAAjB,CACD,CACD,MAAOE,CAAAA,SAAP,CACD,CALM,CAOP,MAAO,IAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAV,MAAM,QAAIT,CAAAA,IAAI,CAAC,SAAAU,GAAG,QAAIA,CAAAA,GAAG,CAACU,KAAJ,GAAc,IAAlB,EAAJ,CAA4BX,MAA5B,CAAR,EAAjC,CAEP,MAAO,IAAMY,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAZ,MAAM,QAAIR,CAAAA,MAAM,CAAC,SAACqB,GAAD,CAAMZ,GAAN,QAAcX,CAAAA,UAAU,CAACuB,GAAD,CAAMpB,KAAK,CAACQ,GAAG,CAACC,IAAL,CAAL,CAAgBD,GAAG,CAACQ,KAApB,CAAN,CAAxB,EAAD,CAA4D,EAA5D,CAAgET,MAAhE,CAAV,EAAjC,CAEP,MAAO,IAAMc,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACV,SAAD,CAAYJ,MAAZ,CAAuB,CAC5D,GAAMM,CAAAA,UAAU,CAAGH,mBAAmB,CAACC,SAAD,CAAYJ,MAAZ,CAAtC,CACA,GAAIM,UAAU,CAAG,CAAjB,CAAoB,CAClB,MAAON,CAAAA,MAAP,CACD,CACD,MAAOZ,CAAAA,MAAM,CAACkB,UAAD,CAAaF,SAAb,CAAwBJ,MAAxB,CAAb,CACD,CANM,CAQP,MAAO,IAAMe,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACf,MAAD,CAASQ,YAAT,QAA0Bd,CAAAA,GAAG,CAAC,SAAAU,SAAS,QAAIG,CAAAA,4BAA4B,CAACH,SAAD,CAAYI,YAAZ,CAAhC,EAAV,CAAqER,MAArE,CAA7B,EAAlC,CAEP,MAAO,IAAMgB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxD,GAAMC,CAAAA,iBAAiB,CAAGlC,IAAI,CAAC,SAAA0B,KAAK,QAAIA,CAAAA,KAAK,CAACT,IAAN,GAAee,KAAK,CAACf,IAAzB,EAAN,CAAqCgB,MAArC,CAA9B,CACA,GAAIvB,KAAK,CAACwB,iBAAD,CAAT,CAA8B,CAC5B,MAAOF,CAAAA,KAAP,CACD,CACD,GAAItB,KAAK,CAACsB,KAAK,CAACC,MAAP,CAAL,EAAuB,CAACrB,EAAE,CAACuB,KAAD,CAAQH,KAAK,CAACC,MAAd,CAA9B,CAAqD,CACnD,MAAO5B,CAAAA,UAAU,CAAC2B,KAAD,CAAQ,CAAEN,KAAK,CAAE,IAAT,CAAeO,MAAM,CAAEC,iBAAiB,CAACD,MAAzC,CAAR,CAAjB,CACD,CACD,MAAO5B,CAAAA,UAAU,CAAC2B,KAAD,CAAQ,CAAEN,KAAK,CAAE,IAAT,CAAeO,MAAM,CAAEtB,MAAM,CAACuB,iBAAiB,CAACD,MAAnB,CAA2BD,KAAK,CAACC,MAAjC,CAA7B,CAAR,CAAjB,CACD,CATM,CAWP,MAAO,IAAMG,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAACC,MAAD,CAAY,CACzD,GAAI3B,KAAK,CAAC2B,MAAM,CAACC,MAAR,CAAT,CAA0B,CACxB,MAAO,EAAP,CACD,CACD,MAAOD,CAAAA,MAAM,CAACC,MAAd,CACD,CALM,CAOP,MAAO,IAAMC,CAAAA,mCAAmC,CAAG,QAAtCA,CAAAA,mCAAsC,CAACF,MAAD,CAAStB,MAAT,CAAoB,CACrE,GAAIL,KAAK,CAAC2B,MAAM,CAACtB,MAAR,CAAT,CAA0B,CACxB,MAAOA,CAAAA,MAAP,CACD,CACD,MAAON,CAAAA,GAAG,CAAC,SAAAO,GAAG,QAAIe,CAAAA,uBAAuB,CAACf,GAAD,CAAMqB,MAAM,CAACtB,MAAb,CAA3B,EAAJ,CAAqDA,MAArD,CAAV,CACD,CALM","sourcesContent":["import {\n  find, findIndex, append, update, has, mergeRight, none, reduce, objOf, map, isNil, concat, is,\n} from 'ramda'\n\n\nexport const selectField = (fieldName, fields) => find(obj => obj.name === fieldName, fields)\n\nexport const getIndexOfFieldData = (fieldData, fields) => findIndex(obj => obj.name === fieldData.name, fields)\n\nexport const insertFieldDataInFields = (fieldData, fields) => {\n  const indexField = getIndexOfFieldData(fieldData, fields)\n  if (indexField < 0) {\n    return append(fieldData, fields)\n  }\n  return update(indexField, fieldData, fields)\n}\n\nexport const insertInitialDataInFieldData = (fieldData, initialValue) => {\n  if (has(fieldData.name, initialValue)) {\n    return mergeRight(fieldData, { value: initialValue[fieldData.name] })\n  }\n  return fieldData\n}\n\nexport const isAllFieldsCorrect = fields => none(obj => obj.error === true, fields)\n\nexport const getValuesForSubmit = fields => reduce((acc, obj) => mergeRight(acc, objOf(obj.name)(obj.value)), {}, fields)\n\nexport const updateFieldDataInFields = (fieldData, fields) => {\n  const indexField = getIndexOfFieldData(fieldData, fields)\n  if (indexField < 0) {\n    return fields\n  }\n  return update(indexField, fieldData, fields)\n}\n\nexport const resetFieldsToInitialValue = (fields, initialValue) => map(fieldData => insertInitialDataInFieldData(fieldData, initialValue), fields)\n\nexport const insertErrorsInFieldData = (field, errors) => {\n  const errorForThisField = find(error => error.name === field.name, errors)\n  if (isNil(errorForThisField)) {\n    return field\n  }\n  if (isNil(field.errors) || !is(Array, field.errors)) {\n    return mergeRight(field, { error: true, errors: errorForThisField.errors })\n  }\n  return mergeRight(field, { error: true, errors: concat(errorForThisField.errors, field.errors) })\n}\n\nexport const handlerGlobalErrorsOfValidation = (result) => {\n  if (isNil(result.global)) {\n    return []\n  }\n  return result.global\n}\n\nexport const handlerFieldsDataErrorsOfValidation = (result, fields) => {\n  if (isNil(result.fields)) {\n    return fields\n  }\n  return map(obj => insertErrorsInFieldData(obj, result.fields), fields)\n}\n"]}]}