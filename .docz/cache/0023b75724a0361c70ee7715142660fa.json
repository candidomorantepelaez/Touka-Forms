{"remainingRequest":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/react\",[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"root\":[\"./src\"]}],[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/docz-core/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx","dependencies":[{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx","mtime":1548024886825},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/cache-loader/dist/cjs.js","mtime":1547306037965},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js","mtime":1547246468683}],"contextDependencies":[],"result":["var _jsxFileName = \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport withFormContext from \"../hocs/with-form-context\";\n\nvar TextFieldWithContext = function TextFieldWithContext(_ref) {\n  var _onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"onChange\"]);\n\n  return React.createElement(TextField, Object.assign({}, rest, {\n    onChange: function onChange(evt) {\n      return _onChange(evt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nTextFieldWithContext.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nvar _default = withFormContext(TextFieldWithContext);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextFieldWithContext, \"TextFieldWithContext\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx\");\n  leaveModule(module);\n})();\n\n;\nTextFieldWithContext.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TextFieldWithContext\",\n  \"props\": {\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/home/kan/desarrollo/proyectos/components/touka-forms/src/components/text-field-with-context.jsx"],"names":["React","PropTypes","TextField","withFormContext","TextFieldWithContext","onChange","rest","evt","target","value","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,MAAGC,SAAH,QAAGA,QAAH;AAAA,MAAgBC,IAAhB;;AAAA,SAC3B,oBAAC,SAAD,oBACMA,IADN;AAEE,IAAA,QAAQ,EAAE,kBAAAC,GAAG;AAAA,aAAIF,SAAQ,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2B;AAAA,CAA7B;;AAOAL,oBAAoB,CAACM,SAArB,GAAiC;AAC/BL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,IAAV,CAAeC;AADM,CAAjC;;eAIeT,eAAe,CAACC,oBAAD,C;;AAA9B;;;;;;;;;;;;0BAXMA,oB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport withFormContext from 'hocs/with-form-context'\n\n\nconst TextFieldWithContext = ({ onChange, ...rest }) => (\n  <TextField\n    {...rest}\n    onChange={evt => onChange(evt.target.value)}\n  />\n)\n\nTextFieldWithContext.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default withFormContext(TextFieldWithContext)\n"]}]}