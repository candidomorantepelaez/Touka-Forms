{"remainingRequest":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/react\",[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"root\":[\"./src\"]}],[\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/docz-core/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx","dependencies":[{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx","mtime":1549053702061},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/cache-loader/dist/cjs.js","mtime":1547306037965},{"path":"/home/kan/desarrollo/proyectos/components/touka-forms/node_modules/babel-loader/lib/index.js","mtime":1547246468683}],"contextDependencies":[],"result":["var _jsxFileName = \"/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isNil, omit } from 'ramda';\nimport FormContext from \"../contexts/form-context\";\nimport { getFieldData, getValueForFieldData, getInitialValue, getErrorsForFieldData, insertValueInFieldData, cleanErrorsInFieldData, checkRequiredFieldData, insertErrorsInFieldData } from \"../functions/input-functions\";\n\nvar withFormContext = function withFormContext(WrappedComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(WithFormContext, _Component);\n\n    function WithFormContext(props) {\n      var _this;\n\n      _classCallCheck(this, WithFormContext);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithFormContext).call(this, props));\n      _this.handleOnValidate = _this.handleOnValidate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.handlerOnChange = _this.handlerOnChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.fieldName = props.name;\n      return _this;\n    }\n\n    _createClass(WithFormContext, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var onFieldMount = this.context.onFieldMount;\n        onFieldMount(this.props);\n      }\n    }, {\n      key: \"handleOnValidate\",\n      value: function handleOnValidate(value, fieldData) {\n        var onValidate = this.props.onValidate;\n        var result = onValidate(value);\n\n        if (isNil(result)) {\n          return fieldData;\n        }\n\n        return insertErrorsInFieldData(result, fieldData);\n      }\n    }, {\n      key: \"handlerOnChange\",\n      value: function handlerOnChange(value, fieldData) {\n        var onChange = this.props.onChange;\n\n        if (onChange) {\n          onChange(value);\n        }\n\n        var onFieldChange = this.context.onFieldChange;\n        var cleanedFieldData = cleanErrorsInFieldData(fieldData);\n        var updatedFieldData = insertValueInFieldData(value, cleanedFieldData);\n        var checkedRequiredFieldData = checkRequiredFieldData(value, updatedFieldData);\n        var validatedFieldData = this.handleOnValidate(value, checkedRequiredFieldData);\n        onFieldChange(validatedFieldData);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$context = this.context,\n            initialValue = _this$context.initialValue,\n            globalErrors = _this$context.globalErrors,\n            fields = _this$context.fields,\n            onSubmit = _this$context.onSubmit;\n        var safeProps = omit(['onChange', 'value', 'onValidate'], this.props);\n        var fieldData = getFieldData(this.fieldName, fields);\n\n        if (isNil(fieldData)) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"Loading\");\n        }\n\n        return React.createElement(WrappedComponent, Object.assign({\n          initial_value: getInitialValue(this.fieldName, initialValue),\n          value: getValueForFieldData(fieldData),\n          global_errors: globalErrors,\n          errors: getErrorsForFieldData(fieldData),\n          error: fieldData.error,\n          onChange: function onChange(value) {\n            return _this2.handlerOnChange(value, fieldData);\n          },\n          onSubmit: onSubmit\n        }, safeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n    }, {\n      key: \"__reactstandin__regenerateByEval\",\n      // @ts-ignore\n      value: function __reactstandin__regenerateByEval(key, code) {\n        // @ts-ignore\n        this[key] = eval(code);\n      }\n    }]);\n\n    return WithFormContext;\n  }(Component), _defineProperty(_class, \"contextType\", FormContext), _defineProperty(_class, \"propTypes\", {\n    name: PropTypes.string.isRequired,\n    onValidate: PropTypes.func,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.number])\n  }), _defineProperty(_class, \"defaultProps\", {\n    onValidate: function onValidate() {\n      return null;\n    },\n    onChange: function onChange(value) {\n      return value;\n    },\n    value: ''\n  }), _temp;\n};\n\nvar _default = withFormContext;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(withFormContext, \"withFormContext\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/home/kan/desarrollo/proyectos/components/touka-forms/src/hocs/with-form-context.jsx"],"names":["React","Component","PropTypes","isNil","omit","FormContext","getFieldData","getValueForFieldData","getInitialValue","getErrorsForFieldData","insertValueInFieldData","cleanErrorsInFieldData","checkRequiredFieldData","insertErrorsInFieldData","withFormContext","WrappedComponent","props","handleOnValidate","bind","handlerOnChange","fieldName","name","onFieldMount","context","value","fieldData","onValidate","result","onChange","onFieldChange","cleanedFieldData","updatedFieldData","checkedRequiredFieldData","validatedFieldData","initialValue","globalErrors","fields","onSubmit","safeProps","error","string","isRequired","func","oneOfType","array","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,WAAP;AACA,SACEC,YADF,EACgBC,oBADhB,EACsCC,eADtC,EACuDC,qBADvD,EAC8EC,sBAD9E,EAEEC,sBAFF,EAE0BC,sBAF1B,EAEkDC,uBAFlD;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,gBAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAgBtC,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,YAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AACA,YAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AACA,YAAKE,SAAL,GAAiBJ,KAAK,CAACK,IAAvB;AAJiB;AAKlB;;AArBqC;AAAA;AAAA,0CAuBlB;AAAA,YACVC,YADU,GACO,KAAKC,OADZ,CACVD,YADU;AAElBA,QAAAA,YAAY,CAAC,KAAKN,KAAN,CAAZ;AACD;AA1BqC;AAAA;AAAA,uCA4BrBQ,KA5BqB,EA4BdC,SA5Bc,EA4BH;AAAA,YACzBC,UADyB,GACV,KAAKV,KADK,CACzBU,UADyB;AAEjC,YAAMC,MAAM,GAAGD,UAAU,CAACF,KAAD,CAAzB;;AACA,YAAIrB,KAAK,CAACwB,MAAD,CAAT,EAAmB;AACjB,iBAAOF,SAAP;AACD;;AACD,eAAOZ,uBAAuB,CAACc,MAAD,EAASF,SAAT,CAA9B;AACD;AAnCqC;AAAA;AAAA,sCAqCtBD,KArCsB,EAqCfC,SArCe,EAqCJ;AAAA,YACxBG,QADwB,GACX,KAAKZ,KADM,CACxBY,QADwB;;AAEhC,YAAIA,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACJ,KAAD,CAAR;AACD;;AAJ+B,YAKxBK,aALwB,GAKN,KAAKN,OALC,CAKxBM,aALwB;AAMhC,YAAMC,gBAAgB,GAAGnB,sBAAsB,CAACc,SAAD,CAA/C;AACA,YAAMM,gBAAgB,GAAGrB,sBAAsB,CAACc,KAAD,EAAQM,gBAAR,CAA/C;AACA,YAAME,wBAAwB,GAAGpB,sBAAsB,CAACY,KAAD,EAAQO,gBAAR,CAAvD;AACA,YAAME,kBAAkB,GAAG,KAAKhB,gBAAL,CAAsBO,KAAtB,EAA6BQ,wBAA7B,CAA3B;AACAH,QAAAA,aAAa,CAACI,kBAAD,CAAb;AACD;AAhDqC;AAAA;AAAA,+BAkD7B;AAAA;;AAAA,4BAGH,KAAKV,OAHF;AAAA,YAELW,YAFK,iBAELA,YAFK;AAAA,YAESC,YAFT,iBAESA,YAFT;AAAA,YAEuBC,MAFvB,iBAEuBA,MAFvB;AAAA,YAE+BC,QAF/B,iBAE+BA,QAF/B;AAIP,YAAMC,SAAS,GAAGlC,IAAI,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,YAAtB,CAAD,EAAsC,KAAKY,KAA3C,CAAtB;AACA,YAAMS,SAAS,GAAGnB,YAAY,CAAC,KAAKc,SAAN,EAAiBgB,MAAjB,CAA9B;;AACA,YAAIjC,KAAK,CAACsB,SAAD,CAAT,EAAsB;AACpB,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAR;AACD;;AACD,eACE,oBAAC,gBAAD;AACE,UAAA,aAAa,EAAEjB,eAAe,CAAC,KAAKY,SAAN,EAAiBc,YAAjB,CADhC;AAEE,UAAA,KAAK,EAAE3B,oBAAoB,CAACkB,SAAD,CAF7B;AAGE,UAAA,aAAa,EAAEU,YAHjB;AAIE,UAAA,MAAM,EAAE1B,qBAAqB,CAACgB,SAAD,CAJ/B;AAKE,UAAA,KAAK,EAAEA,SAAS,CAACc,KALnB;AAME,UAAA,QAAQ,EAAE,kBAAAf,KAAK;AAAA,mBAAI,MAAI,CAACL,eAAL,CAAqBK,KAArB,EAA4BC,SAA5B,CAAJ;AAAA,WANjB;AAOE,UAAA,QAAQ,EAAEY;AAPZ,WAQMC,SARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD;AAvEqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,IAAkCrC,SAAlC,0CACjBI,WADiB,wCAGnB;AACjBgB,IAAAA,IAAI,EAAEnB,SAAS,CAACsC,MAAV,CAAiBC,UADN;AAEjBf,IAAAA,UAAU,EAAExB,SAAS,CAACwC,IAFL;AAGjBd,IAAAA,QAAQ,EAAE1B,SAAS,CAACwC,IAHH;AAIjBlB,IAAAA,KAAK,EAAEtB,SAAS,CAACyC,SAAV,CAAoB,CAACzC,SAAS,CAACsC,MAAX,EAAmBtC,SAAS,CAAC0C,KAA7B,EAAoC1C,SAAS,CAAC2C,MAA9C,CAApB;AAJU,GAHmB,2CAUhB;AACpBnB,IAAAA,UAAU,EAAE;AAAA,aAAO,IAAP;AAAA,KADQ;AAEpBE,IAAAA,QAAQ,EAAE,kBAAAJ,KAAK;AAAA,aAAIA,KAAJ;AAAA,KAFK;AAGpBA,IAAAA,KAAK,EAAE;AAHa,GAVgB;AAAA,CAAxC;;eA0EeV,e;AAAf;;;;;;;;;;;;0BA1EMA,e","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { isNil, omit } from 'ramda'\nimport FormContext from 'contexts/form-context'\nimport {\n  getFieldData, getValueForFieldData, getInitialValue, getErrorsForFieldData, insertValueInFieldData,\n  cleanErrorsInFieldData, checkRequiredFieldData, insertErrorsInFieldData,\n} from 'functions/input-functions'\n\n\nconst withFormContext = WrappedComponent => class WithFormContext extends Component {\n  static contextType = FormContext\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onValidate: PropTypes.func,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.number]),\n  }\n\n  static defaultProps = {\n    onValidate: () => (null),\n    onChange: value => value,\n    value: '',\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleOnValidate = this.handleOnValidate.bind(this)\n    this.handlerOnChange = this.handlerOnChange.bind(this)\n    this.fieldName = props.name\n  }\n\n  componentDidMount() {\n    const { onFieldMount } = this.context\n    onFieldMount(this.props)\n  }\n\n  handleOnValidate(value, fieldData) {\n    const { onValidate } = this.props\n    const result = onValidate(value)\n    if (isNil(result)) {\n      return fieldData\n    }\n    return insertErrorsInFieldData(result, fieldData)\n  }\n\n  handlerOnChange(value, fieldData) {\n    const { onChange } = this.props\n    if (onChange) {\n      onChange(value)\n    }\n    const { onFieldChange } = this.context\n    const cleanedFieldData = cleanErrorsInFieldData(fieldData)\n    const updatedFieldData = insertValueInFieldData(value, cleanedFieldData)\n    const checkedRequiredFieldData = checkRequiredFieldData(value, updatedFieldData)\n    const validatedFieldData = this.handleOnValidate(value, checkedRequiredFieldData)\n    onFieldChange(validatedFieldData)\n  }\n\n  render() {\n    const {\n      initialValue, globalErrors, fields, onSubmit,\n    } = this.context\n    const safeProps = omit(['onChange', 'value', 'onValidate'], this.props)\n    const fieldData = getFieldData(this.fieldName, fields)\n    if (isNil(fieldData)) {\n      return (<p>Loading</p>)\n    }\n    return (\n      <WrappedComponent\n        initial_value={getInitialValue(this.fieldName, initialValue)}\n        value={getValueForFieldData(fieldData)}\n        global_errors={globalErrors}\n        errors={getErrorsForFieldData(fieldData)}\n        error={fieldData.error}\n        onChange={value => this.handlerOnChange(value, fieldData)}\n        onSubmit={onSubmit}\n        {...safeProps}\n      />\n    )\n  }\n}\n\nexport default withFormContext\n"]}]}