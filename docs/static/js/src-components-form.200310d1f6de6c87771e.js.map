{"version":3,"sources":["webpack:///./src/functions/form-functions.js","webpack:///./src/managers/form-context-manager.js","webpack:///./src/components/form.jsx","webpack:///./src/components/form.mdx","webpack:///./src/contexts/form-context.js"],"names":["getIndexOfFieldData","fieldData","fields","findIndex","obj","name","insertInitialDataInFieldData","initialValue","has","mergeRight","value","handlerFieldsDataErrorsOfValidation","result","isNil","map","field","errors","errorForThisField","find","error","is","Array","concat","FormContextManager","_classCallCheck","this","onFieldChange","bind","onFieldMount","onResetForm","onSubmitForm","onValidationForm","getValues","globalErrorsInForm","indexField","update","updateFieldDataInFields","fieldDataWithInitialValue","append","insertFieldDataInFields","isFieldCorrect","none","isFormCorrect","isEmpty","global","handlerGlobalErrorsOfValidation","valueForFields","reduce","acc","objOf","Form","props","_this","form_classCallCheck","_getPrototypeOf","call","formManager","_assertThisInitialized","handlerOnValidate","handlerSubmit","state","errorsInForm","Component","_this2","setState","_this3","onValidate","newFieldvalue","newErrorsInForm","Promise","resolve","evt","_this4","onSubmit","preventDefault","then","_this5","children","_this$state","safeProps","omit","react_default","a","createElement","form_context","Provider","globalErrors","Object","assign","MDXContent","components_form_classCallCheck","form_possibleConstructorReturn","form_getPrototypeOf","layout","React","_this$props","components","_objectWithoutProperties","dist","id","parentName","href","index_m","of","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","FormContext","n","createContext"],"mappings":"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","file":"static/js/src-components-form.c73d0b13.js","sourcesContent":["import {\n  find, findIndex, append, update, has, mergeRight, none, reduce, objOf, map, isNil, concat, is,\n} from 'ramda'\n\n\nexport const selectField = (fieldName, fields) => find(obj => obj.name === fieldName, fields)\n\nexport const getIndexOfFieldData = (fieldData, fields) => findIndex(obj => obj.name === fieldData.name, fields)\n\nexport const insertFieldDataInFields = (fieldData, fields) => {\n  const indexField = getIndexOfFieldData(fieldData, fields)\n  if (indexField < 0) {\n    return append(fieldData, fields)\n  }\n  return update(indexField, fieldData, fields)\n}\n\nexport const insertInitialDataInFieldData = (fieldData, initialValue) => {\n  if (has(fieldData.name, initialValue)) {\n    return mergeRight(fieldData, { value: initialValue[fieldData.name] })\n  }\n  return fieldData\n}\n\nexport const isAllFieldsCorrect = fields => none(obj => obj.error === true, fields)\n\nexport const getValuesForSubmit = fields => reduce((acc, obj) => mergeRight(acc, objOf(obj.name)(obj.value)), {}, fields)\n\nexport const updateFieldDataInFields = (fieldData, fields) => {\n  const indexField = getIndexOfFieldData(fieldData, fields)\n  if (indexField < 0) {\n    return fields\n  }\n  return update(indexField, fieldData, fields)\n}\n\nexport const resetFieldsToInitialValue = (fields, initialValue) => map(fieldData => insertInitialDataInFieldData(fieldData, initialValue), fields)\n\nexport const insertErrorsInFieldData = (field, errors) => {\n  const errorForThisField = find(error => error.name === field.name, errors)\n  if (isNil(errorForThisField)) {\n    return field\n  }\n  if (isNil(field.errors) || !is(Array, field.errors)) {\n    return mergeRight(field, { error: true, errors: errorForThisField.errors })\n  }\n  return mergeRight(field, { error: true, errors: concat(errorForThisField.errors, field.errors) })\n}\n\nexport const handlerGlobalErrorsOfValidation = (result) => {\n  if (isNil(result.global)) {\n    return []\n  }\n  return result.global\n}\n\nexport const handlerFieldsDataErrorsOfValidation = (result, fields) => {\n  if (isNil(result.fields)) {\n    return fields\n  }\n  return map(obj => insertErrorsInFieldData(obj, result.fields), fields)\n}\n","import {\n  isNil, isEmpty, reduce, mergeRight, objOf,\n} from 'ramda'\nimport {\n  insertInitialDataInFieldData, insertFieldDataInFields,\n  isAllFieldsCorrect, updateFieldDataInFields, resetFieldsToInitialValue,\n  handlerGlobalErrorsOfValidation, handlerFieldsDataErrorsOfValidation,\n} from 'functions/form-functions'\n\n\nclass FormContextManager {\n  constructor(initialValue) {\n    this.onFieldChange = this.onFieldChange.bind(this)\n    this.onFieldMount = this.onFieldMount.bind(this)\n    this.onResetForm = this.onResetForm.bind(this)\n    this.onSubmitForm = this.onSubmitForm.bind(this)\n    this.onValidationForm = this.onValidationForm.bind(this)\n    this.getValues = this.getValues.bind(this)\n    this.fields = []\n    this.initialValue = initialValue\n    this.globalErrorsInForm = []\n  }\n\n  onFieldChange(fieldData) {\n    this.fields = updateFieldDataInFields(fieldData, this.fields)\n    return this.fields\n  }\n\n  onFieldMount(fieldData) {\n    const fieldDataWithInitialValue = insertInitialDataInFieldData(fieldData, this.initialValue)\n    this.fields = insertFieldDataInFields(fieldDataWithInitialValue, this.fields)\n    return this.fields\n  }\n\n  onResetForm() {\n    this.fields = resetFieldsToInitialValue(this.fields, this.initialValue)\n    return this.fields\n  }\n\n  onSubmitForm() {\n    const isFieldCorrect = isAllFieldsCorrect(this.fields)\n    const isFormCorrect = isEmpty(this.globalErrorsInForm)\n    if (isFieldCorrect === true && isFormCorrect === true) {\n      return this.getValues()\n    }\n    return null\n  }\n\n  onValidationForm(result) {\n    if (isNil(result)) {\n      this.globalErrorsInForm = []\n      return this.fields\n    }\n    this.fields = handlerFieldsDataErrorsOfValidation(result, this.fields)\n    this.globalErrorsInForm = handlerGlobalErrorsOfValidation(result)\n    return this.fields\n  }\n\n  getValues() {\n    const valueForFields = reduce((acc, obj) => mergeRight(acc, objOf(obj.name)(obj.value)), {}, this.fields)\n    return mergeRight(this.initialValue, valueForFields)\n  }\n}\n\nexport default FormContextManager\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { isNil, omit } from 'ramda'\nimport FormContextManager from 'managers/form-context-manager'\nimport FormContext from 'contexts/form-context'\n\n\nclass Form extends Component {\n  static propTypes = {\n    /**\n     * define el valor inicial del formulario, en caso de tener conflicto con el\n     * valor inicial de un input en concreto, tiene preferencia este valor.\n     */\n    initialValue: PropTypes.shape({}),\n\n    /**\n     * funcion que se ejecuta al enviar el formulario,\n     * recibe como parametro un objecto con el valor del formulario.\n     */\n    onSubmit: PropTypes.func.isRequired,\n\n    /**\n     * son los hijos del componente Form\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * funcion que se ejecuta en cada cambio de valor del formulario.\n     * recibe como parametro el nuevo valor, en caso de error se debe\n     * retornar un objeto error.\n     *\n     */\n    onValidate: PropTypes.func,\n\n  }\n\n  static defaultProps = {\n    initialValue: {},\n    onValidate: () => null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.formManager = new FormContextManager(props.initialValue)\n    this.onFieldChange = this.onFieldChange.bind(this)\n    this.onFieldMount = this.onFieldMount.bind(this)\n    this.handlerOnValidate = this.handlerOnValidate.bind(this)\n    this.handlerSubmit = this.handlerSubmit.bind(this)\n    this.state = {\n      initialValue: props.initialValue,\n      fields: {},\n      errorsInForm: [],\n    }\n  }\n\n  onFieldChange(fieldData) {\n    this.setState({\n      fields: this.formManager.onFieldChange(fieldData),\n    }, () => this.handlerOnValidate())\n  }\n\n  onFieldMount(fieldData) {\n    this.setState({ fields: this.formManager.onFieldMount(fieldData) })\n  }\n\n  handlerOnValidate() {\n    const { onValidate } = this.props\n    const result = onValidate(this.formManager.getValues())\n    const newFieldvalue = this.formManager.onValidationForm(result)\n    const newErrorsInForm = this.formManager.globalErrorsInForm\n    return new Promise((resolve) => {\n      this.setState({\n        fields: newFieldvalue,\n        errorsInForm: newErrorsInForm,\n      }, () => resolve())\n    })\n  }\n\n  handlerSubmit(evt) {\n    const { onSubmit } = this.props\n    if (!isNil(evt)) {\n      evt.preventDefault()\n    }\n    this.handlerOnValidate().then(() => {\n      const value = this.formManager.onSubmitForm()\n      if (!isNil(value)) {\n        onSubmit(value)\n      }\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    const {\n      initialValue, errorsInForm, fields,\n    } = this.state\n    const safeProps = omit(['initialValue', 'onValidate', 'onSubmit'], this.props)\n    return (\n      <FormContext.Provider\n        value={{\n          initialValue,\n          globalErrors: errorsInForm,\n          fields,\n          onFieldChange: this.onFieldChange,\n          onFieldMount: this.onFieldMount,\n          onSubmit: this.handlerSubmit,\n        }}\n      >\n        <form\n          onSubmit={evt => this.handlerSubmit(evt)}\n          {...safeProps}\n        >\n          {children}\n        </form>\n      </FormContext.Provider>\n    )\n  }\n}\n\nexport default Form\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable } from 'docz'\nimport Form from './form'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"etiqueta-form\"}}>{`Etiqueta Form`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Etiqueta que crea y gestiona el estado del contexto para el formulario.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Esta etiqueta crea un contexto en el que se exponen publicamente parte del estado del formulario,\ncomo son el valor y los errores, y acciones o funciones que pueden ser ejecutadas desde cualquier parte.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Para acceder a este contexto se usa la funcion de alto nivel (HOC) `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/with-form-context\"}}>{`withFormContext`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Actualmente, dentro del contexto tenemos acceso a la siguiente informacion:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`initialValue: Objeto que contiene el valor inicial del formulario, es el valor que se usará al resetar el formulario.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`globalErrors: Array de string que contiene los errores globales del formulario,\nestos se pueden mostrar directamente usando la etiqueta ShowFormGlobalErrors.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`fields: Objeto que contiene las propiedades y el valor de cada input que estan conectado al formulario.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`y a las siguientes acciones y funciones:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`onFieldChange: Funcion que se debe ejecutar al modificarse un input, para informar del cambio al contexto.\nSe debe pasar como parametro el nuevo valor del input(el objeto completo, con todas las props),\nque será almacenado en el contexto reemplazando el anterior valor para dicho input.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`onFieldMount: Funcion que ejecuta internamente la funcion `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"/with-form-context\"}}>{`withFormContext`}</MDXTag>{`,\nque sirve para registrar el input en el contexto,\nen dicha funcion se pasa por parametro todas las props del input, el contexto inserta el input en el objeto fields,\ny ademas, carga en el, el valor inicial.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`onSubmit: Funcion que ejecuta el envio del formulario.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Además, esta etiqueta admite todos los atributos que admite la etiqueta `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/form\"}}>{`form`}</MDXTag>{` de html,\ntodos las props que no sean las expuestas en la tabla seran pasadas directamente a la etiqueta form interna.\nHay que tener en cuenta que el estado del formulario es controlado, y que algunos atributos de la etiqueta `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/form\"}}>{`form`}</MDXTag>{`\nnativa de html pueden no tener mucho sentido, o que no funcionen de la manera esperada.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`props`}</MDXTag>\n<PropsTable of={Form} />\n           </MDXTag>\n  }\n}\n  ","import React from 'react'\n\n\nconst FormContext = React.createContext()\n\nexport default FormContext\n"],"sourceRoot":""}